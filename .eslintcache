[{"C:\\Users\\Chris\\Desktop\\Nackademin\\JS4\\job-listings-task\\src\\App.js":"1","C:\\Users\\Chris\\Desktop\\Nackademin\\JS4\\job-listings-task\\src\\components\\SearchPanel.jsx":"2","C:\\Users\\Chris\\Desktop\\Nackademin\\JS4\\job-listings-task\\src\\context\\SearchValueContext.js":"3","C:\\Users\\Chris\\Desktop\\Nackademin\\JS4\\job-listings-task\\src\\components\\JobResultList.jsx":"4","C:\\Users\\Chris\\Desktop\\Nackademin\\JS4\\job-listings-task\\src\\components\\JobCardItem.jsx":"5","C:\\Users\\Chris\\Desktop\\Nackademin\\JS4\\job-listings-task\\src\\components\\parts\\BaseLayout.jsx":"6"},{"size":1096,"mtime":1611401250094,"results":"7","hashOfConfig":"8"},{"size":1847,"mtime":1611409067450,"results":"9","hashOfConfig":"8"},{"size":613,"mtime":1611406999622,"results":"10","hashOfConfig":"8"},{"size":3862,"mtime":1611408705528,"results":"11","hashOfConfig":"8"},{"size":1247,"mtime":1611401250095,"results":"12","hashOfConfig":"8"},{"size":1681,"mtime":1611423911455,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"16","usedDeprecatedRules":"17"},"euk66j",{"filePath":"18","messages":"19","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20","usedDeprecatedRules":"17"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26","usedDeprecatedRules":"17"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"17"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\Chris\\Desktop\\Nackademin\\JS4\\job-listings-task\\src\\App.js",["32","33","34","35","36","37"],"import React, { useState, useEffect, useContext } from \"react\";\r\nimport { Route, Switch } from \"react-router-dom\";\r\nimport JobCardItem from \"./components/JobCardItem\";\r\nimport BaseLayout from \"./components/parts/BaseLayout\";\r\nimport SearchPanel from \"./components/SearchPanel\";\r\nimport { SearchContext } from \"./context/SearchValueContext\";\r\nimport JobResultList from \"./components/JobResultList\";\r\n\r\nfunction App() {\r\n\r\n  const {\r\n    previousSearch,\r\n    setListData,\r\n    listData,\r\n    resultData,\r\n    setResultData,\r\n  } = useContext(SearchContext);\r\n\r\n  return (\r\n    <Switch>\r\n      <Route\r\n        path=\"/jobs/:id\"\r\n        render={(props) => {\r\n          return (\r\n            <BaseLayout>\r\n              <JobCardItem props={props} />\r\n            </BaseLayout>\r\n          );\r\n        }}\r\n      ></Route>\r\n      <Route path=\"/\">\r\n        <BaseLayout>\r\n          <SearchPanel />\r\n          {resultData ? (\r\n            <JobResultList/>\r\n          ) : (\r\n            \"No jobs found yet\"\r\n          )}\r\n        </BaseLayout>\r\n      </Route>\r\n    </Switch>\r\n  );\r\n}\r\n\r\nexport default App;\r\n",["38","39"],"C:\\Users\\Chris\\Desktop\\Nackademin\\JS4\\job-listings-task\\src\\components\\SearchPanel.jsx",["40","41","42","43","44","45","46"],"import React, { useState, useContext, useEffect, useRef } from \"react\";\r\nimport { SearchContext } from \"../context/SearchValueContext\";\r\nimport Button from '@material-ui/core/Button';\r\nimport styled from \"styled-components\";\r\n\r\nconst SearchPanelContainer = styled.div`\r\n  display: flex;\r\n  width: 50%;\r\n  align-self: center;\r\n`;\r\n\r\nexport default function SearchPanel({}) {\r\n  const {\r\n    setListData,\r\n    listData,\r\n    setResultData,\r\n    resultData,\r\n    setPreviousSearch,\r\n    previousSearch,\r\n  } = useContext(SearchContext);\r\n\r\n  const [inputValue, setInputValue] = useState(\"\");\r\n  const handledSearchString = () => {\r\n    return inputValue.replace(/ /g, \"+\");\r\n  };\r\n\r\n  const getJobList = async () => {\r\n\r\n    const handlePrvSearch = (value) => {\r\n      return previousSearch.filter((item) => {\r\n        return item.search == value ?? item;\r\n      });\r\n    };\r\n\r\n    const prvResult = handlePrvSearch(handledSearchString());\r\n    if (prvResult.length > 0) {\r\n      return setResultData(prvResult[0].results);\r\n    }\r\n\r\n    try {\r\n      fetch(\r\n        `https://us-central1-wands-2017.cloudfunctions.net/githubjobs?description=${handledSearchString()}`\r\n      )\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n          setResultData(data);\r\n          setPreviousSearch((prevSearch) => [\r\n            ...prevSearch,\r\n            { search: handledSearchString(), results: data },\r\n          ]);\r\n        });\r\n    } catch (error) {\r\n      console.log(\"Error\", error.log);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <SearchPanelContainer>\r\n      <input\r\n        type=\"text\"\r\n        onChange={(input) => setInputValue(input.target.value)}\r\n      />\r\n         <Button   onClick={() => {\r\n          getJobList();\r\n        }} variant=\"contained\" color=\"primary\">\r\n        Get job!\r\n      </Button>\r\n    </SearchPanelContainer>\r\n  );\r\n}\r\n","C:\\Users\\Chris\\Desktop\\Nackademin\\JS4\\job-listings-task\\src\\context\\SearchValueContext.js",[],["47","48"],"C:\\Users\\Chris\\Desktop\\Nackademin\\JS4\\job-listings-task\\src\\components\\JobResultList.jsx",["49","50"],"import React, { useContext } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { Link } from \"react-router-dom/cjs/react-router-dom.min\";\r\nimport { SearchContext } from \"../context/SearchValueContext\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"70%\",\r\n    display: \"flex\",\r\n    flexDirection:\"row\",\r\n    maxWidth: \"36ch\",\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n  inline: {\r\n    display: \"inline\",\r\n  },\r\n}));\r\n\r\nconst CardListItem = styled.article`\r\n  display: flex;\r\n  flex-direction: column;\r\n  background: #cacaca;\r\n  margin-bottom: 20px;\r\n  padding: 5%;\r\n`;\r\n\r\nexport default function JobListItem() {\r\n  const { resultData } = useContext(SearchContext);\r\n\r\n  const classes = useStyles();\r\n\r\n  const renderListItem = () => {\r\n    return (\r\n      <>\r\n        <ListItem alignItems=\"flex-start\">\r\n          <ListItemAvatar>\r\n            <Avatar alt=\"Remy Sharp\" src=\"/static/images/avatar/1.jpg\" />\r\n          </ListItemAvatar>\r\n          <ListItemText\r\n            primary=\"Brunch this weekend?\"\r\n            secondary={\r\n              <React.Fragment>\r\n                <Typography\r\n                  component=\"span\"\r\n                  variant=\"body2\"\r\n                  className={classes.inline}\r\n                  color=\"textPrimary\"\r\n                >\r\n                  Ali Connors\r\n                </Typography>\r\n                {\" — I'll be in your neighborhood doing errands this…\"}\r\n              </React.Fragment>\r\n            }\r\n          />\r\n        </ListItem>\r\n        <Divider variant=\"inset\" component=\"li\" />\r\n      </>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <List className={classes.root}>\r\n    \r\n        {\r\n          resultData ? \r\n          resultData.map((job) => {\r\n          return (\r\n            <Link\r\n              style={{\r\n                textDecoration: \"none\",\r\n                color: \"black\",\r\n                lineHeight: \"140%\",\r\n              }}\r\n              to={`/jobs/${job.id}`}\r\n            >\r\n              <ListItem alignItems=\"flex-start\">\r\n                <ListItemAvatar>\r\n                  <Avatar alt=\"Remy Sharp\" src={job.company_logo} />\r\n                </ListItemAvatar>\r\n                <ListItemText\r\n                  primary={job.type}\r\n                  secondary={\r\n                    <React.Fragment>\r\n                      <Typography\r\n                        component=\"span\"\r\n                        variant=\"body2\"\r\n                        className={classes.inline}\r\n                        color=\"textPrimary\"\r\n                      >\r\n                          <h2>{job.title}</h2>\r\n                      </Typography>\r\n                      <a href={job.company_url}>Url</a>\r\n                      <div style={{maxHeight:200, overflowY:\"hidden\"}} dangerouslySetInnerHTML={{ __html: job.description }} />\r\n                    </React.Fragment>\r\n                  }\r\n                />\r\n              </ListItem>\r\n{/* \r\n              <CardListItem key={job.id}>\r\n                <img src={job.company_logo} width={150} />\r\n                <strong>{job.type}</strong>\r\n                <h2>{job.title}</h2>\r\n                <a href={job.company_url}>Url</a>\r\n                <div dangerouslySetInnerHTML={{ __html: job.description }} />\r\n              </CardListItem> */}\r\n            </Link>\r\n          );\r\n        })\r\n        : \r\n        <p>hej</p>\r\n        }\r\n      </List>\r\n    </>\r\n  );\r\n}\r\n","C:\\Users\\Chris\\Desktop\\Nackademin\\JS4\\job-listings-task\\src\\components\\JobCardItem.jsx",["51","52"],"import React, { useState, useEffect } from \"react\";\r\n\r\nexport const LIST_URL =\r\n  \"https://us-central1-wands-2017.cloudfunctions.net/githubjobs?description=javascript\";\r\nexport const JOB_URL =\r\n  \"https://us-central1-wands-2017.cloudfunctions.net/githubjobs?id=35842a28-ff88-47ba-99e5-f9960ae901a4\";\r\n\r\nexport default function JobCardItem({ props }) {\r\n\r\n  const [position, setPosition] = useState(null);\r\n\r\n  const getSpecificPosition = async () => {\r\n    const id = props.match.params.id;\r\n    try {\r\n      fetch(\r\n        `https://us-central1-wands-2017.cloudfunctions.net/githubjobs?id=${id}`\r\n      )\r\n        .then((res) => res.json())\r\n        .then((data) => setPosition(data));\r\n    } catch (error) {\r\n      console.log(error.log);\r\n    }\r\n  };\r\n\r\n  const renderJob = () => {\r\n    console.log(position)\r\n    return (\r\n     <div>\r\n      <img src={position.company_logo} width={250}/>\r\n       <p>{position.title}</p>\r\n       <div dangerouslySetInnerHTML={{ __html: position.description }} />\r\n       <p>{position.location}</p>\r\n       <p>{position.type}</p>\r\n       <p>{position.how_to_apply}</p>\r\n     </div>\r\n    )\r\n  };\r\n\r\n  useEffect(() => {\r\n    getSpecificPosition();\r\n  }, []); \r\n\r\n  return <div>{position && renderJob()}</div>;\r\n}\r\n","C:\\Users\\Chris\\Desktop\\Nackademin\\JS4\\job-listings-task\\src\\components\\parts\\BaseLayout.jsx",["53","54","55","56"],{"ruleId":"57","severity":1,"message":"58","line":1,"column":17,"nodeType":"59","messageId":"60","endLine":1,"endColumn":25},{"ruleId":"57","severity":1,"message":"61","line":1,"column":27,"nodeType":"59","messageId":"60","endLine":1,"endColumn":36},{"ruleId":"57","severity":1,"message":"62","line":12,"column":5,"nodeType":"59","messageId":"60","endLine":12,"endColumn":19},{"ruleId":"57","severity":1,"message":"63","line":13,"column":5,"nodeType":"59","messageId":"60","endLine":13,"endColumn":16},{"ruleId":"57","severity":1,"message":"64","line":14,"column":5,"nodeType":"59","messageId":"60","endLine":14,"endColumn":13},{"ruleId":"57","severity":1,"message":"65","line":16,"column":5,"nodeType":"59","messageId":"60","endLine":16,"endColumn":18},{"ruleId":"66","replacedBy":"67"},{"ruleId":"68","replacedBy":"69"},{"ruleId":"57","severity":1,"message":"61","line":1,"column":39,"nodeType":"59","messageId":"60","endLine":1,"endColumn":48},{"ruleId":"57","severity":1,"message":"70","line":1,"column":50,"nodeType":"59","messageId":"60","endLine":1,"endColumn":56},{"ruleId":"71","severity":1,"message":"72","line":12,"column":37,"nodeType":"73","messageId":"74","endLine":12,"endColumn":39},{"ruleId":"57","severity":1,"message":"63","line":14,"column":5,"nodeType":"59","messageId":"60","endLine":14,"endColumn":16},{"ruleId":"57","severity":1,"message":"64","line":15,"column":5,"nodeType":"59","messageId":"60","endLine":15,"endColumn":13},{"ruleId":"57","severity":1,"message":"75","line":17,"column":5,"nodeType":"59","messageId":"60","endLine":17,"endColumn":15},{"ruleId":"76","severity":1,"message":"77","line":31,"column":28,"nodeType":"78","messageId":"74","endLine":31,"endColumn":30},{"ruleId":"66","replacedBy":"79"},{"ruleId":"68","replacedBy":"80"},{"ruleId":"57","severity":1,"message":"81","line":28,"column":7,"nodeType":"59","messageId":"60","endLine":28,"endColumn":19},{"ruleId":"57","severity":1,"message":"82","line":41,"column":9,"nodeType":"59","messageId":"60","endLine":41,"endColumn":23},{"ruleId":"83","severity":1,"message":"84","line":29,"column":7,"nodeType":"85","endLine":29,"endColumn":53},{"ruleId":"86","severity":1,"message":"87","line":41,"column":6,"nodeType":"88","endLine":41,"endColumn":8,"suggestions":"89"},{"ruleId":"57","severity":1,"message":"90","line":46,"column":11,"nodeType":"59","messageId":"60","endLine":46,"endColumn":18},{"ruleId":"57","severity":1,"message":"91","line":48,"column":21,"nodeType":"59","messageId":"60","endLine":48,"endColumn":31},{"ruleId":"57","severity":1,"message":"92","line":49,"column":12,"nodeType":"59","messageId":"60","endLine":49,"endColumn":17},{"ruleId":"57","severity":1,"message":"93","line":49,"column":19,"nodeType":"59","messageId":"60","endLine":49,"endColumn":27},"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'previousSearch' is assigned a value but never used.","'setListData' is assigned a value but never used.","'listData' is assigned a value but never used.","'setResultData' is assigned a value but never used.","no-native-reassign",["94"],"no-negated-in-lhs",["95"],"'useRef' is defined but never used.","no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","unexpected","'resultData' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression",["94"],["95"],"'CardListItem' is assigned a value but never used.","'renderListItem' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getSpecificPosition'. Either include it or remove the dependency array.","ArrayExpression",["96"],"'classes' is assigned a value but never used.","'setLoading' is assigned a value but never used.","'query' is assigned a value but never used.","'setQuery' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"97","fix":"98"},"Update the dependencies array to be: [getSpecificPosition]",{"range":"99","text":"100"},[1187,1189],"[getSpecificPosition]"]